package CalculatorPaper;

import java.awt.Image;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;


public class CalculatorPaper1 extends javax.swing.JFrame {
  // Declarations
        private float auxfloat1, auxfloat2;
        private float memory;
	private char auxOperation;
        private String auxScreen;
        private String route="src\\registerCalculator.txt";                 
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yy");
        String date = sdf.format(new Date());  
        /*public Font negrita = new Font("Arial", Font.BOLD, 14);
        public Font font1= new Font ("Arial",Font.PLAIN,12);*/
        
        



    public CalculatorPaper1() {
                
        initComponents();
        
         /* Resize button method */
         
        ImageIcon icon = new ImageIcon("src\\CalculatorPaper\\save.jpg");
        Image imgSave = icon.getImage(); //convert icon into an image
        Image rotatingSave = imgSave.getScaledInstance(50,50,java.awt.Image.SCALE_SMOOTH); // we create a new image giving it the dimensions we want in the old way
        ImageIcon othericon = new ImageIcon(rotatingSave);
        jB_saveTXT.setIcon(othericon);
        
        ImageIcon icon2 = new ImageIcon("src\\CalculatorPaper\\open.jpg");
        Image imgOpen = icon2.getImage(); //convert icon into an image
        Image rotatingOpen = imgOpen.getScaledInstance(50,50,java.awt.Image.SCALE_SMOOTH); // we create a new image giving it the dimensions we want in the old way
        ImageIcon othericon2 = new ImageIcon(rotatingOpen);
        jB_loadTXT.setIcon(othericon2);
        
        ImageIcon icon3 = new ImageIcon("src\\CalculatorPaper\\text.jpg");
        Image imgText = icon3.getImage(); //convert icon into an image
        Image rotatingText = imgText.getScaledInstance(50,50,java.awt.Image.SCALE_SMOOTH); // we create a new image giving it the dimensions we want in the old way
        ImageIcon othericon3 = new ImageIcon(rotatingText);
        jB_Visualizer.setIcon(othericon3);
        
        ImageIcon icon4 = new ImageIcon("src\\CalculatorPaper\\delete.jpg");
        Image imgDelete = icon4.getImage(); //convert icon into an image
        Image rotatingDelete = imgDelete.getScaledInstance(50,50,java.awt.Image.SCALE_SMOOTH); // we create a new image giving it the dimensions we want in the old way
        ImageIcon othericon4 = new ImageIcon(rotatingDelete);
        jB_Delete.setIcon(othericon4);
        
       
        
        
        this.setLocationRelativeTo(null);  
        screenPaper.setText(screenPaper.getText()+date+"\n\n");
        
    }
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTF_Screen = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        screenPaper = new javax.swing.JTextArea();
        jB_Back = new javax.swing.JButton();
        jB_CE = new javax.swing.JButton();
        jB_C = new javax.swing.JButton();
        jB_MC = new javax.swing.JButton();
        jB_MR = new javax.swing.JButton();
        jB_MS = new javax.swing.JButton();
        jB_Mmenos = new javax.swing.JButton();
        jB_Mmas = new javax.swing.JButton();
        jB_0 = new javax.swing.JButton();
        jB_00 = new javax.swing.JButton();
        jB_000 = new javax.swing.JButton();
        jB_1 = new javax.swing.JButton();
        jB_2 = new javax.swing.JButton();
        jB_3 = new javax.swing.JButton();
        jB_4 = new javax.swing.JButton();
        jB_5 = new javax.swing.JButton();
        jB_6 = new javax.swing.JButton();
        jB_7 = new javax.swing.JButton();
        jB_8 = new javax.swing.JButton();
        jB_9 = new javax.swing.JButton();
        jB_Point = new javax.swing.JButton();
        jB_Add = new javax.swing.JButton();
        jB_Subtract = new javax.swing.JButton();
        jB_Multiplicar = new javax.swing.JButton();
        jB_Dividir = new javax.swing.JButton();
        jB_Tantoporcien = new javax.swing.JButton();
        jB_UnoentreX = new javax.swing.JButton();
        jB_Mas_menos = new javax.swing.JButton();
        jB_Equal = new javax.swing.JButton();
        jB_saveTXT = new javax.swing.JButton();
        jB_3ptos = new javax.swing.JButton();
        jTF_rutaOrigen = new javax.swing.JTextField();
        jB_loadTXT = new javax.swing.JButton();
        jB_Visualizer = new javax.swing.JButton();
        jB_Delete = new javax.swing.JButton();
        jB_loadTXT1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        Archive = new javax.swing.JMenu();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        Salir = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("My Calculator");
        setResizable(false);

        jTF_Screen.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jTF_Screen.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTF_Screen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_ScreenActionPerformed(evt);
            }
        });

        screenPaper.setColumns(20);
        screenPaper.setRows(5);
        screenPaper.setWrapStyleWord(true);
        jScrollPane2.setViewportView(screenPaper);

        jB_Back.setBackground(new java.awt.Color(102, 102, 102));
        jB_Back.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jB_Back.setText("Back");
        jB_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_BackActionPerformed(evt);
            }
        });

        jB_CE.setBackground(new java.awt.Color(102, 102, 102));
        jB_CE.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jB_CE.setText("CE");
        jB_CE.setRolloverEnabled(false);
        jB_CE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_CEActionPerformed(evt);
            }
        });

        jB_C.setBackground(new java.awt.Color(102, 102, 102));
        jB_C.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jB_C.setText("C");
        jB_C.setToolTipText("");
        jB_C.setPreferredSize(new java.awt.Dimension(85, 50));
        jB_C.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_CActionPerformed(evt);
            }
        });

        jB_MC.setBackground(new java.awt.Color(102, 102, 102));
        jB_MC.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jB_MC.setText("MC");
        jB_MC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_MCActionPerformed(evt);
            }
        });

        jB_MR.setBackground(new java.awt.Color(102, 102, 102));
        jB_MR.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jB_MR.setText("MR");
        jB_MR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_MRActionPerformed(evt);
            }
        });

        jB_MS.setBackground(new java.awt.Color(102, 102, 102));
        jB_MS.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jB_MS.setText("MS");
        jB_MS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_MSActionPerformed(evt);
            }
        });

        jB_Mmenos.setBackground(new java.awt.Color(102, 102, 102));
        jB_Mmenos.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jB_Mmenos.setText("M-");
        jB_Mmenos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_MmenosActionPerformed(evt);
            }
        });

        jB_Mmas.setBackground(new java.awt.Color(102, 102, 102));
        jB_Mmas.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jB_Mmas.setText("M+");
        jB_Mmas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_MmasActionPerformed(evt);
            }
        });

        jB_0.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jB_0.setText("0");
        jB_0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_0ActionPerformed(evt);
            }
        });

        jB_00.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jB_00.setText("00");
        jB_00.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_00ActionPerformed(evt);
            }
        });

        jB_000.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jB_000.setText("000");
        jB_000.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_000ActionPerformed(evt);
            }
        });

        jB_1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jB_1.setText("1");
        jB_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_1ActionPerformed(evt);
            }
        });

        jB_2.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jB_2.setText("2");
        jB_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_2ActionPerformed(evt);
            }
        });

        jB_3.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jB_3.setText("3");
        jB_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_3ActionPerformed(evt);
            }
        });

        jB_4.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jB_4.setText("4");
        jB_4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_4ActionPerformed(evt);
            }
        });

        jB_5.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jB_5.setText("5");
        jB_5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_5ActionPerformed(evt);
            }
        });

        jB_6.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jB_6.setText("6");
        jB_6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_6ActionPerformed(evt);
            }
        });

        jB_7.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jB_7.setText("7");
        jB_7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_7ActionPerformed(evt);
            }
        });

        jB_8.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jB_8.setText("8");
        jB_8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_8ActionPerformed(evt);
            }
        });

        jB_9.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jB_9.setText("9");
        jB_9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_9ActionPerformed(evt);
            }
        });

        jB_Point.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jB_Point.setText(".");
        jB_Point.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_PointActionPerformed(evt);
            }
        });

        jB_Add.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jB_Add.setText("+");
        jB_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_AddActionPerformed(evt);
            }
        });

        jB_Subtract.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jB_Subtract.setText("-");
        jB_Subtract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_SubtractActionPerformed(evt);
            }
        });

        jB_Multiplicar.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jB_Multiplicar.setText("x");
        jB_Multiplicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_MultiplicarActionPerformed(evt);
            }
        });

        jB_Dividir.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jB_Dividir.setText("/");
        jB_Dividir.setToolTipText("");
        jB_Dividir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_DividirActionPerformed(evt);
            }
        });

        jB_Tantoporcien.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jB_Tantoporcien.setText("%");
        jB_Tantoporcien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_TantoporcienActionPerformed(evt);
            }
        });

        jB_UnoentreX.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jB_UnoentreX.setText("/x");
        jB_UnoentreX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_UnoentreXActionPerformed(evt);
            }
        });

        jB_Mas_menos.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jB_Mas_menos.setText("+/-");
        jB_Mas_menos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_Mas_menosActionPerformed(evt);
            }
        });

        jB_Equal.setBackground(new java.awt.Color(102, 102, 102));
        jB_Equal.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        jB_Equal.setText("=");
        jB_Equal.setToolTipText("");
        jB_Equal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_EqualActionPerformed(evt);
            }
        });

        jB_saveTXT.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jB_saveTXT.setToolTipText("");
        jB_saveTXT.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jB_saveTXT.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jB_saveTXT.setIconTextGap(3);
        jB_saveTXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_saveTXTActionPerformed(evt);
            }
        });

        jB_3ptos.setText("...");
        jB_3ptos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_3ptosActionPerformed(evt);
            }
        });

        jB_loadTXT.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jB_loadTXT.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jB_loadTXT.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jB_loadTXT.setIconTextGap(3);
        jB_loadTXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_loadTXTActionPerformed(evt);
            }
        });

        jB_Visualizer.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jB_Visualizer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jB_VisualizerMouseEntered(evt);
            }
        });
        jB_Visualizer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_VisualizerActionPerformed(evt);
            }
        });

        jB_Delete.setPreferredSize(new java.awt.Dimension(50, 50));
        jB_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_DeleteActionPerformed(evt);
            }
        });

        jB_loadTXT1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jB_loadTXT1.setText("RESET CALCULATOR");
        jB_loadTXT1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jB_loadTXT1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jB_loadTXT1.setIconTextGap(3);
        jB_loadTXT1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_loadTXT1ActionPerformed(evt);
            }
        });

        Archive.setText("MY CALCULATOR");
        Archive.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Archive.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                ArchiveMenuSelected(evt);
            }
        });
        Archive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ArchiveActionPerformed(evt);
            }
        });
        Archive.add(jSeparator1);

        Salir.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Salir.setText("Salir");
        Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirActionPerformed(evt);
            }
        });
        Archive.add(Salir);

        jMenuBar1.add(Archive);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jB_Back, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(jB_CE, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jB_MC, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jB_7, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(jB_8, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(jB_9, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jB_MR, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jB_4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(jB_5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(jB_6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jB_MS, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jB_1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(jB_2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(jB_3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jB_Mmenos, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jB_0, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(jB_00, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(jB_Mas_menos, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jB_Mmas, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jB_000, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(jB_Point, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jB_C, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jB_Multiplicar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(jB_Dividir, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jB_Subtract, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(jB_Tantoporcien, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jB_Add, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(jB_UnoentreX, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jB_Equal, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                            .addComponent(jB_loadTXT1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTF_Screen, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jB_loadTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jB_saveTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jB_Visualizer, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jB_Delete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jB_3ptos, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTF_rutaOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTF_Screen, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jB_Delete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jB_loadTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jB_saveTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jB_Visualizer, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jB_3ptos)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jTF_rutaOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jB_Back, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jB_CE, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jB_MC, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jB_7, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jB_8, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jB_9, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jB_MR, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jB_4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jB_5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jB_6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jB_MS, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jB_1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jB_2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jB_3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jB_Mmenos, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jB_0, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jB_00, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jB_Mas_menos, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jB_Mmas, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jB_000, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jB_Point, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jB_C, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jB_Multiplicar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jB_Dividir, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jB_Subtract, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jB_Tantoporcien, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jB_Add, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jB_UnoentreX, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addComponent(jB_Equal, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jB_loadTXT1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jB_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_BackActionPerformed
        // Delete digits one by one
        jTF_Screen.setText(jTF_Screen.getText().substring(0,jTF_Screen.getText().length()-1));
    }//GEN-LAST:event_jB_BackActionPerformed

    private void jB_CEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_CEActionPerformed
      
/* (Clear Error) Removes the displayed number, used for when an input error is made
        of data but without eliminating all the calculation that is being carried out
        */
        jTF_Screen.setText("");
    }//GEN-LAST:event_jB_CEActionPerformed

    private void jB_CActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_CActionPerformed
       
// (Clear) Delete all current calculation
        auxfloat1=0f;
	auxfloat2=0f;
	auxOperation=' ';
        jTF_Screen.setText("");
        auxScreen= screenPaper.getText();
        screenPaper.setText(auxScreen+jTF_Screen.getText()+"\n-----------------------------------\n");
    }//GEN-LAST:event_jB_CActionPerformed

    private void jB_MCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_MCActionPerformed
       // (Memory Clear) Delete any number stored in memory (Keys: CTRL + L)
        // Clear memory and memory tag
        memory = 0;
        auxScreen= screenPaper.getText();
        screenPaper.setText(screenPaper.getText()+ "MC \n"); 
    }//GEN-LAST:event_jB_MCActionPerformed

    private void jB_7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_7ActionPerformed
       // Declarations
        jTF_Screen.setText(jTF_Screen.getText() + "7");
        auxScreen= screenPaper.getText();
        screenPaper.setText(auxScreen+jTF_Screen.getText().substring(jTF_Screen.getText().length()-1));
    }//GEN-LAST:event_jB_7ActionPerformed

    private void jB_8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_8ActionPerformed
      // Declarations
        jTF_Screen.setText(jTF_Screen.getText() + "8");
        auxScreen= screenPaper.getText();
        screenPaper.setText(auxScreen+jTF_Screen.getText().substring(jTF_Screen.getText().length()-1));
    }//GEN-LAST:event_jB_8ActionPerformed

    private void jB_9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_9ActionPerformed
      // Declarations
        jTF_Screen.setText(jTF_Screen.getText() + "9");
        auxScreen= screenPaper.getText();
        screenPaper.setText(auxScreen+jTF_Screen.getText().substring(jTF_Screen.getText().length()-1));
    }//GEN-LAST:event_jB_9ActionPerformed

    private void jB_MultiplicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_MultiplicarActionPerformed
        auxOperation='*';
        auxfloat1=Float.parseFloat(jTF_Screen.getText());
        jTF_Screen.setText("");
        screenPaper.setText(screenPaper.getText()+auxOperation); 
    }//GEN-LAST:event_jB_MultiplicarActionPerformed

    private void jB_DividirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_DividirActionPerformed
        // THAT GENERATES ERROR WHEN DIVIDED BY 0
        auxOperation='/';
        auxfloat1=Float.parseFloat(jTF_Screen.getText());
        jTF_Screen.setText("");
        auxScreen= screenPaper.getText();
        screenPaper.setText(auxScreen+auxOperation);
    }//GEN-LAST:event_jB_DividirActionPerformed

    private void jB_MRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_MRActionPerformed
        // (Memory Recall) Recall the number stored in memory. The number remains in memory (Keys: CTRL + R)
        jTF_Screen.setText(memory + " ");
        auxScreen= screenPaper.getText();
        screenPaper.setText(screenPaper.getText()+ "MR \n"); 
    }//GEN-LAST:event_jB_MRActionPerformed

    private void jB_4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_4ActionPerformed
        jTF_Screen.setText(jTF_Screen.getText() + "4");
        auxScreen= screenPaper.getText();
        screenPaper.setText(auxScreen+jTF_Screen.getText().substring(jTF_Screen.getText().length()-1)); 
    }//GEN-LAST:event_jB_4ActionPerformed

    private void jB_5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_5ActionPerformed
        jTF_Screen.setText(jTF_Screen.getText() + "5");
        auxScreen= screenPaper.getText();
        screenPaper.setText(auxScreen+jTF_Screen.getText().substring(jTF_Screen.getText().length()-1));
    }//GEN-LAST:event_jB_5ActionPerformed

    private void jB_6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_6ActionPerformed
        jTF_Screen.setText(jTF_Screen.getText() + "6");
        auxScreen= screenPaper.getText();
        screenPaper.setText(auxScreen+jTF_Screen.getText().substring(jTF_Screen.getText().length()-1));
    }//GEN-LAST:event_jB_6ActionPerformed

    private void jB_SubtractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_SubtractActionPerformed
        auxOperation='-';
	auxfloat1=Float.parseFloat(jTF_Screen.getText());
	jTF_Screen.setText("");
        auxScreen= screenPaper.getText();
        screenPaper.setText(auxScreen+auxOperation);
    }//GEN-LAST:event_jB_SubtractActionPerformed

    private void jB_TantoporcienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_TantoporcienActionPerformed
        auxOperation='%';
	auxfloat1=Float.parseFloat(jTF_Screen.getText());
	jTF_Screen.setText("");
        auxScreen= screenPaper.getText();
        screenPaper.setText(auxScreen+auxOperation);
    }//GEN-LAST:event_jB_TantoporcienActionPerformed

    private void jB_MSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_MSActionPerformed
       
// (Memory Storage) Stores the displayed number in memory (Keys: CTRL + M)
        memory = Float.parseFloat(jTF_Screen.getText());
        auxScreen= screenPaper.getText();
        screenPaper.setText(screenPaper.getText()+ "MS \n"); 
    }//GEN-LAST:event_jB_MSActionPerformed

    private void jB_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_1ActionPerformed
      // Declarations
        jTF_Screen.setText(jTF_Screen.getText() + "1");
        auxScreen= screenPaper.getText();
        screenPaper.setText(auxScreen+jTF_Screen.getText().substring(jTF_Screen.getText().length()-1));
    }//GEN-LAST:event_jB_1ActionPerformed

    private void jB_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_2ActionPerformed
      // Declarations
        jTF_Screen.setText(jTF_Screen.getText() + "2");
        auxScreen= screenPaper.getText();
        screenPaper.setText(auxScreen+jTF_Screen.getText().substring(jTF_Screen.getText().length()-1));
    }//GEN-LAST:event_jB_2ActionPerformed

    private void jB_3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_3ActionPerformed
      // Declarations
        jTF_Screen.setText(jTF_Screen.getText() + "3");
        auxScreen= screenPaper.getText();
        screenPaper.setText(auxScreen+jTF_Screen.getText().substring(jTF_Screen.getText().length()-1));
    }//GEN-LAST:event_jB_3ActionPerformed

    private void jB_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_AddActionPerformed
        auxOperation='+';
	auxfloat1=Float.parseFloat(jTF_Screen.getText());
	jTF_Screen.setText("");
        auxScreen= screenPaper.getText();
        screenPaper.setText(auxScreen+auxOperation);
    }//GEN-LAST:event_jB_AddActionPerformed

    private void jB_UnoentreXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_UnoentreXActionPerformed
        auxOperation='X';
	auxfloat1=Float.parseFloat(jTF_Screen.getText());
	jTF_Screen.setText("");
        auxScreen= screenPaper.getText();
        screenPaper.setText(auxScreen+auxOperation);
    }//GEN-LAST:event_jB_UnoentreXActionPerformed

    private void jB_MmenosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_MmenosActionPerformed
       /* Subtracts the displayed number from another number in memory but does not show the subtraction
        of these numbers (Keys: CTRL + Q)
        */

        memory = memory - Float.parseFloat(jTF_Screen.getText());
        auxScreen= screenPaper.getText();
        screenPaper.setText(screenPaper.getText()+ "M- \n"); 
    }//GEN-LAST:event_jB_MmenosActionPerformed

    private void jB_0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_0ActionPerformed
      // Declarations
        jTF_Screen.setText(jTF_Screen.getText() + "0");
        auxScreen= screenPaper.getText();
        screenPaper.setText(auxScreen+jTF_Screen.getText().substring(jTF_Screen.getText().length()-1));
    }//GEN-LAST:event_jB_0ActionPerformed

    private void jB_00ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_00ActionPerformed
      // Declarations
        jTF_Screen.setText(jTF_Screen.getText() + "00");
        auxScreen= screenPaper.getText();
        screenPaper.setText(auxScreen+jTF_Screen.getText().substring(jTF_Screen.getText().length()-2));
    }//GEN-LAST:event_jB_00ActionPerformed

    private void jB_Mas_menosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_Mas_menosActionPerformed
        auxOperation='$';
	auxfloat1=Float.parseFloat(jTF_Screen.getText());
	jTF_Screen.setText("");
        auxScreen= screenPaper.getText();
        screenPaper.setText(auxScreen+auxOperation);
    }//GEN-LAST:event_jB_Mas_menosActionPerformed

    private void jB_EqualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_EqualActionPerformed
        screenPaper.setText(auxScreen+jTF_Screen.getText());
        switch(auxOperation){
            case '+':
                jTF_Screen.setText(" "+(auxfloat1+Float.parseFloat(jTF_Screen.getText())));
                auxScreen= screenPaper.getText();
                screenPaper.setText(auxScreen+"\nResults:"+jTF_Screen.getText()+"\n");
                break;
            case '-':
                jTF_Screen.setText(" "+(auxfloat1-Float.parseFloat(jTF_Screen.getText())));
                auxScreen= screenPaper.getText();
                screenPaper.setText(auxScreen+"\nResults:"+jTF_Screen.getText()+"\n");
                break;    
            case '*':
                jTF_Screen.setText(" "+(auxfloat1*Float.parseFloat(jTF_Screen.getText())));
                auxScreen= screenPaper.getText();
                screenPaper.setText(auxScreen+"\nResults:"+jTF_Screen.getText()+"\n");
            	break;   
            case '/':
                jTF_Screen.setText(" "+(auxfloat1/Float.parseFloat(jTF_Screen.getText())));
                auxScreen= screenPaper.getText();
                screenPaper.setText(auxScreen+"\nResults:"+jTF_Screen.getText()+"\n");
 		break;
            case '%':
                jTF_Screen.setText(" "+(auxfloat1/100));
                auxScreen= screenPaper.getText();
                screenPaper.setText(auxScreen+"\nResults:"+jTF_Screen.getText()+"\n");
 		break;	  
 	    case 'X':
                jTF_Screen.setText(" "+(1/auxfloat1));
                auxScreen= screenPaper.getText();
                screenPaper.setText(auxScreen+"\nResults:"+jTF_Screen.getText()+"\n");
 		break;
            case '$':
 		jTF_Screen.setText(" "+(-auxfloat1*Float.parseFloat(jTF_Screen.getText())));
                auxScreen= screenPaper.getText();
                screenPaper.setText(auxScreen+"\nResults:\n"+jTF_Screen.getText());
 		break;	 
       
 	}//swicth
    }//GEN-LAST:event_jB_EqualActionPerformed

    private void jB_MmasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_MmasActionPerformed
       /* Add the displayed number to another number that is in memory but does not show the sum
        of these numbers (Keys: CTRL + P)
        */
        memory = memory + Float.parseFloat(jTF_Screen.getText());
        auxScreen= screenPaper.getText();
        screenPaper.setText(screenPaper.getText()+ "M+ \n"); 
    }//GEN-LAST:event_jB_MmasActionPerformed

    private void jB_000ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_000ActionPerformed
      // Declarations
        jTF_Screen.setText(jTF_Screen.getText() + "000");
        auxScreen= screenPaper.getText();
        screenPaper.setText(auxScreen+jTF_Screen.getText().substring(jTF_Screen.getText().length()-3));
    }//GEN-LAST:event_jB_000ActionPerformed

    private void jB_PointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_PointActionPerformed
      // Declarations
        jTF_Screen.setText(jTF_Screen.getText() + ".");
        auxScreen= screenPaper.getText();
        screenPaper.setText(auxScreen+jTF_Screen.getText());
    }//GEN-LAST:event_jB_PointActionPerformed

    private void jB_saveTXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_saveTXTActionPerformed
      // Declarations 
       // String str = "src\\CalculatorPaper.txt";  // The path where the file will be saved
        BufferedWriter bw= null;
        FileWriter fw= null;                
     //***Writing    
        try { 
            
            File file = new File ("src\\register\\"+date+".txt");  // We create the path where the file will be saved plus the date of the day.
            
            if (!file.exists()) {  
            file.createNewFile();  
            }//fin if
            fw= new FileWriter(file.getAbsoluteFile(),true); //This is what will prevent the above from being crushed.
            bw= new BufferedWriter(fw);
            bw.write(screenPaper.getText());   //We tell you to write us what is on the paper.
            bw.write(8);
            bw.write(10);   
            bw.close();
 
        } catch(IOException e){ 
            System.out.println("Error E/S: "+e); 
        } finally{              //finalmente...
            try {
                       //Close FileWriter and BufferedWriter
            if (bw != null)
                bw.close();
            if (fw != null)
                fw.close();
            }/*fin try*/ catch (IOException ex) {
                ex.printStackTrace();
            } 
            
        }//fin finally
     
    }//GEN-LAST:event_jB_saveTXTActionPerformed

    private void jTF_ScreenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTF_ScreenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTF_ScreenActionPerformed

    private void jB_3ptosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_3ptosActionPerformed
        File strFile;
        JFileChooser chooser= new JFileChooser();
         int returnVal= chooser.showOpenDialog(chooser);    
        if(returnVal==JFileChooser.APPROVE_OPTION){
            strFile= chooser.getSelectedFile(); 
            jTF_rutaOrigen.setText(strFile.getPath()); // It leaves us in memory the file that we have selected. If we then click Read, it will read that file to us.
        }
    }//GEN-LAST:event_jB_3ptosActionPerformed

    private void jB_loadTXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_loadTXTActionPerformed
            String code = new String(), path = jTF_rutaOrigen.getText();
            File Archive = new File(path);

            FileReader fr = null;
            BufferedReader entrance = null;
            try {
                fr = new FileReader(path);
                entrance = new BufferedReader(fr);

                while(entrance.ready()){
                    code += entrance.readLine()+"\n";
                   
                }
            }catch(IOException e) {
                e.printStackTrace();
            }finally{
                try{                    
                    if(null != fr){   
                        fr.close();     
                    }                  
                }catch (Exception e2){ 
                    e2.printStackTrace();
                }
            }
               screenPaper.setText(code);
    }//GEN-LAST:event_jB_loadTXTActionPerformed

    private void ArchiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ArchiveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ArchiveActionPerformed

    private void ArchiveMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_ArchiveMenuSelected
        // TODO add your handling code here:
    }//GEN-LAST:event_ArchiveMenuSelected

    private void SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_SalirActionPerformed

    private void jB_VisualizerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_VisualizerActionPerformed
         
        
            Runtime r= Runtime.getRuntime();
                String comando="cmd /c start ..\\MyCalculator\\src\\register\\"+date+".txt";  
		
                Process p=null;
		String linea;

		try{
		
                    p=r.exec(comando);
           
                    InputStream is= p.getInputStream();
                   // You create a buffer for me since it reads line by line and you present it on the screen in the open Stream. 
                    BufferedReader br= new BufferedReader(new InputStreamReader(is));  

                 
// If the line is not empty, read it to me and print it
                    while((linea=br.readLine())!=null){  
        		System.out.println(linea);
                    }
                   
        	br.close();
		}catch(Exception e){
		e.printStackTrace();
		}
        
    }//GEN-LAST:event_jB_VisualizerActionPerformed

    private void jB_VisualizerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jB_VisualizerMouseEntered
        
    }//GEN-LAST:event_jB_VisualizerMouseEntered

    private void jB_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_DeleteActionPerformed
        panelDelete panel= new panelDelete();
        panel.setVisible(true);
    }//GEN-LAST:event_jB_DeleteActionPerformed

    private void jB_loadTXT1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_loadTXT1ActionPerformed
        screenPaper.setText(date+""+"\n\n");
        auxfloat1=0f;
	auxfloat2=0f;
	auxOperation=' ';
        jTF_Screen.setText("");
        auxScreen= screenPaper.getText();
    }//GEN-LAST:event_jB_loadTXT1ActionPerformed
       
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CalculatorPaper1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CalculatorPaper1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CalculatorPaper1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CalculatorPaper1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CalculatorPaper1().setVisible(true);
            } 
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Archive;
    private javax.swing.JMenuItem Salir;
    private javax.swing.JButton jB_0;
    private javax.swing.JButton jB_00;
    private javax.swing.JButton jB_000;
    private javax.swing.JButton jB_1;
    private javax.swing.JButton jB_2;
    private javax.swing.JButton jB_3;
    private javax.swing.JButton jB_3ptos;
    private javax.swing.JButton jB_4;
    private javax.swing.JButton jB_5;
    private javax.swing.JButton jB_6;
    private javax.swing.JButton jB_7;
    private javax.swing.JButton jB_8;
    private javax.swing.JButton jB_9;
    private javax.swing.JButton jB_Add;
    private javax.swing.JButton jB_Back;
    private javax.swing.JButton jB_C;
    private javax.swing.JButton jB_CE;
    private javax.swing.JButton jB_Delete;
    private javax.swing.JButton jB_Dividir;
    private javax.swing.JButton jB_Equal;
    private javax.swing.JButton jB_MC;
    private javax.swing.JButton jB_MR;
    private javax.swing.JButton jB_MS;
    private javax.swing.JButton jB_Mas_menos;
    private javax.swing.JButton jB_Mmas;
    private javax.swing.JButton jB_Mmenos;
    private javax.swing.JButton jB_Multiplicar;
    private javax.swing.JButton jB_Point;
    private javax.swing.JButton jB_Subtract;
    private javax.swing.JButton jB_Tantoporcien;
    private javax.swing.JButton jB_UnoentreX;
    private javax.swing.JButton jB_Visualizer;
    private javax.swing.JButton jB_loadTXT;
    private javax.swing.JButton jB_loadTXT1;
    private javax.swing.JButton jB_saveTXT;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTextField jTF_Screen;
    private javax.swing.JTextField jTF_rutaOrigen;
    public javax.swing.JTextArea screenPaper;
    // End of variables declaration//GEN-END:variables

}//class
